{"ast":null,"code":"import _toConsumableArray from \"/Users/tedaneblake/Documents/dev-react/modern-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nvar _jsxFileName = \"/Users/tedaneblake/Documents/dev-react/modern-redux/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useAppDispatch, useAppSelector } from \"./app/hooks.tsx\";\nimport { incremented, addSome } from \"./features/counter/counter-slice.tsx\";\nimport { useRef } from \"react\";\nimport { useFetchPlayersQuery } from \"./features/players/players-api-slice.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _console,\n      _this = this;\n\n  var _useFetchPlayersQuery = useFetchPlayersQuery(),\n      _useFetchPlayersQuery2 = _useFetchPlayersQuery.data,\n      data = _useFetchPlayersQuery2 === void 0 ? [] : _useFetchPlayersQuery2,\n      isFetching = _useFetchPlayersQuery.isFetching;\n\n  var ref = useRef();\n  var count = useAppSelector(function (state) {\n    return state.counter.value;\n  });\n  var dispatch = useAppDispatch();\n\n  var handleClick = function handleClick() {\n    dispatch(incremented());\n  };\n\n  var handleAddSome = function handleAddSome(amount) {\n    dispatch(addSome(amount));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counter example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Increment + 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"choose amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ref: ref,\n        defaultValue: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return handleAddSome(ref.current.valueAsNumber);\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RTK Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Arsenal players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), (_console = console).log.apply(_console, _toConsumableArray(data)), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys.apply(Object, _toConsumableArray(data)).map(function (tHead) {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: tHead\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uMhkK+W47acDBaVwbyVvmw/pBEY=\", false, function () {\n  return [useFetchPlayersQuery, useAppSelector, useAppDispatch];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tedaneblake/Documents/dev-react/modern-redux/src/App.tsx"],"names":["useAppDispatch","useAppSelector","incremented","addSome","useRef","useFetchPlayersQuery","App","data","isFetching","ref","count","state","counter","value","dispatch","handleClick","handleAddSome","amount","current","valueAsNumber","console","log","Object","keys","map","tHead"],"mappings":";;;;;AAAA,OAAO,cAAP;AACA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,sCAArC;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,0CAArC;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAAA;AAAA;;AAC5B,8BAAkCD,oBAAoB,EAAtD;AAAA,qDAAQE,IAAR;AAAA,MAAQA,IAAR,uCAAe,EAAf;AAAA,MAAmBC,UAAnB,yBAAmBA,UAAnB;;AACA,MAAMC,GAAG,GAAGL,MAAM,EAAlB;AAKA,MAAMM,KAAK,GAAGT,cAAc,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAN,CAAcC,KAAzB;AAAA,GAAD,CAA5B;AACA,MAAMC,QAAQ,GAAGd,cAAc,EAA/B;;AAEA,MAAMe,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,QAAQ,CAACZ,WAAW,EAAZ,CAAR;AACD,GAFD;;AAMA,MAAMc,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAoB;AACxCH,IAAAA,QAAQ,CAACX,OAAO,CAACc,MAAD,CAAR,CAAR;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,4BAAWP,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEK,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAEN,GAA1B;AAA+B,QAAA,YAAY,EAAE;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMO,aAAa,CAACP,GAAG,CAACS,OAAJ,CAAYC,aAAb,CAAnB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAaE;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAgBG,YAAAC,OAAO,EAACC,GAAR,oCAAed,IAAf,EAhBH,eAiBE;AAAA,8BACE;AAAA,+BACE;AAAA,oBACGe,MAAM,CAACC,IAAP,OAAAD,MAAM,qBAASf,IAAT,EAAN,CAAqBiB,GAArB,CAAyB,UAACC,KAAD;AAAA,gCACxB;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,qBADwB;AAAA,WAAzB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAjDuBnB,G;UACYD,oB,EAMpBJ,c,EACGD,c;;;KARKM,G","sourcesContent":["import \"./styles.css\";\nimport { useAppDispatch, useAppSelector } from \"./app/hooks.tsx\";\nimport { incremented, addSome } from \"./features/counter/counter-slice.tsx\";\nimport { useRef } from \"react\";\nimport { useFetchPlayersQuery } from \"./features/players/players-api-slice.tsx\";\nexport default function App() {\n  const { data = [], isFetching } = useFetchPlayersQuery();\n  const ref = useRef();\n\n  type inputState = {\n    input: number;\n  };\n  const count = useAppSelector((state) => state.counter.value);\n  const dispatch = useAppDispatch();\n\n  const handleClick = () => {\n    dispatch(incremented());\n  };\n  type iAmount = {\n    amount: number;\n  };\n  const handleAddSome = (amount: number) => {\n    dispatch(addSome(amount));\n  };\n  return (\n    <div className=\"App\">\n      <h1>Counter example</h1>\n      <p>Count: {count}</p>\n      <button onClick={handleClick}>Increment + 1</button>\n      <hr />\n      <p>choose amount</p>\n      <fieldset>\n        <input type=\"number\" ref={ref} defaultValue={1} />\n        <button onClick={() => handleAddSome(ref.current.valueAsNumber)}>\n          Add\n        </button>\n      </fieldset>\n\n      <hr />\n      <h1>RTK Query</h1>\n      <h2>Arsenal players</h2>\n      {console.log(...data)}\n      <table>\n        <thead>\n          <tr>\n            {Object.keys(...data).map((tHead) => (\n              <th>{tHead}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}