{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\n// (aliasing) adding type  to basic redux hooks and returning them\nexport var useAppDispatch = function useAppDispatch() {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport var useAppSelector = useSelector;","map":{"version":3,"sources":["/Users/tedaneblake/Documents/dev-react/modern-redux/src/app/hooks.tsx"],"names":["useDispatch","useSelector","useAppDispatch","useAppSelector"],"mappings":";;AAAA,SAA+BA,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AAGA;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;;AAAA,SAAMF,WAAW,EAAjB;AAAA,CAAvB;;GAAME,c;UAAuBF,W;;;AACpC,OAAO,IAAMG,cAA+C,GAAGF,WAAxD","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { rootState, appDispatch } from \"./store.tsx\";\n\n// (aliasing) adding type  to basic redux hooks and returning them\nexport const useAppDispatch = () => useDispatch<appDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<rootState> = useSelector;\n"]},"metadata":{},"sourceType":"module"}