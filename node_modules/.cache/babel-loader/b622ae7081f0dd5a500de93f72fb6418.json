{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nvar baseUrl = \"https://arsenal-players-api.herokuapp.com\";\n// api slice\nexport var apiSlice = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: baseUrl\n  }),\n  endpoints: function endpoints(builder) {\n    return {\n      fetchPlayers: builder.query({\n        query: function query() {\n          var playerId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n          return \"/players/\".concat(playerId);\n        }\n      })\n    };\n  }\n});\nvar useFetchPlayersQuery = apiSlice.useFetchPlayersQuery;\nexport { useFetchPlayersQuery };","map":{"version":3,"sources":["/Users/tedaneblake/Documents/dev-react/modern-redux/src/features/players/players-api-slice.tsx"],"names":["createApi","fetchBaseQuery","baseUrl","apiSlice","reducerPath","baseQuery","endpoints","builder","fetchPlayers","query","playerId","useFetchPlayersQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AACA,IAAMC,OAAO,GAAG,2CAAhB;AAiBA;AACA,OAAO,IAAMC,QAAQ,GAAGH,SAAS,CAAC;AAChCI,EAAAA,WAAW,EAAE,KADmB;AAEhCC,EAAAA,SAAS,EAAEJ,cAAc,CAAC;AACxBC,IAAAA,OAAO,EAAPA;AADwB,GAAD,CAFO;AAKhCI,EAAAA,SALgC,qBAKtBC,OALsB,EAKb;AACjB,WAAO;AACLC,MAAAA,YAAY,EAAED,OAAO,CAACE,KAAR,CAAuC;AACnDA,QAAAA,KADmD,mBAC9B;AAAA,cAAfC,QAAe,uEAAJ,EAAI;AACnB,oCAAmBA,QAAnB;AACD;AAHkD,OAAvC;AADT,KAAP;AAOD;AAb+B,CAAD,CAA1B;AAgBA,IAAQC,oBAAR,GAAiCR,QAAjC,CAAQQ,oBAAR","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst baseUrl = \"https://arsenal-players-api.herokuapp.com\";\n\ninterface player {\n  id: number;\n  first_name: string;\n  last_name: string;\n  position: string;\n  birthdate: string;\n  nationality: string;\n  shirt_number: number;\n  player_image: string;\n  on_loan: boolean;\n  first_team: boolean;\n  flag: string;\n  loan_team: string | null;\n}\n\n// api slice\nexport const apiSlice = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({\n    baseUrl,\n  }),\n  endpoints(builder) {\n    return {\n      fetchPlayers: builder.query<player[], string | void>({\n        query(playerId = \"\") {\n          return `/players/${playerId}`;\n        },\n      }),\n    };\n  },\n});\n\nexport const { useFetchPlayersQuery } = apiSlice;\n"]},"metadata":{},"sourceType":"module"}