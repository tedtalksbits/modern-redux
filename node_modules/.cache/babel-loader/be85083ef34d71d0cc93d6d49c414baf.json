{"ast":null,"code":"import _defineProperty from \"/Users/tedaneblake/Documents/dev-react/modern-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counter-slice.tsx\";\nimport { apiSlice } from \"../features/players/players-api-slice.jsx\";\nexport var store = configureStore({\n  reducer: _defineProperty({\n    counter: counterReducer\n  }, apiSlice.reducerPath, apiSlice.reducer)\n}); // using type script inference to dynamically set type","map":{"version":3,"sources":["/Users/tedaneblake/Documents/dev-react/modern-redux/src/app/store.tsx"],"names":["configureStore","counterReducer","apiSlice","store","reducer","counter","reducerPath"],"mappings":";AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,SAASC,QAAT,QAAyB,2CAAzB;AAEA,OAAO,IAAMC,KAAK,GAAGH,cAAc,CAAC;AAClCI,EAAAA,OAAO;AACLC,IAAAA,OAAO,EAAEJ;AADJ,KAEJC,QAAQ,CAACI,WAFL,EAEmBJ,QAAQ,CAACE,OAF5B;AAD2B,CAAD,CAA5B,C,CAOP","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counter-slice.tsx\";\nimport { apiSlice } from \"../features/players/players-api-slice.jsx\";\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n  },\n});\n\n// using type script inference to dynamically set type\nexport type appDispatch = typeof store.dispatch;\nexport type rootState = ReturnType<typeof store.getState>;\n"]},"metadata":{},"sourceType":"module"}