{"ast":null,"code":"var _jsxFileName = \"/Users/tedaneblake/Documents/dev-react/modern-redux/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useAppDispatch, useAppSelector } from \"./app/hooks.tsx\";\nimport { incremented, addSome } from \"./features/counter/counter-slice.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var count = useAppSelector(function (state) {\n    return state.counter.value;\n  });\n  var dispatch = useAppDispatch();\n\n  var handleClick = function handleClick() {\n    dispatch(incremented());\n  };\n\n  var handleAddSome = function handleAddSome(amount) {\n    dispatch(addSome(amount));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Counter example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Increment+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"choose amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"69pYTulermizp4n+q9BDtJH+xs8=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tedaneblake/Documents/dev-react/modern-redux/src/App.tsx"],"names":["useAppDispatch","useAppSelector","incremented","addSome","App","count","state","counter","value","dispatch","handleClick","handleAddSome","amount"],"mappings":";;;AAAA,OAAO,cAAP;AACA,SAASA,cAAT,EAAyBC,cAAzB,QAA+C,iBAA/C;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,sCAArC;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,MAAMC,KAAK,GAAGJ,cAAc,CAAC,UAACK,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAN,CAAcC,KAAzB;AAAA,GAAD,CAA5B;AACA,MAAMC,QAAQ,GAAGT,cAAc,EAA/B;;AAEA,MAAMU,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBD,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,GAFD;;AAMA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAqB;AACzCH,IAAAA,QAAQ,CAACN,OAAO,CAACS,MAAD,CAAR,CAAR;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,4BAAWP,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEK,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA5BuBN,G;UACRH,c,EACGD,c;;;KAFKI,G","sourcesContent":["import \"./styles.css\";\nimport { useAppDispatch, useAppSelector } from \"./app/hooks.tsx\";\nimport { incremented, addSome } from \"./features/counter/counter-slice.tsx\";\nexport default function App() {\n  const count = useAppSelector((state) => state.counter.value);\n  const dispatch = useAppDispatch();\n\n  const handleClick = () => {\n    dispatch(incremented());\n  };\n  interface iAmount {\n    amount: number;\n  }\n  const handleAddSome = (amount: iAmount) => {\n    dispatch(addSome(amount));\n  };\n  return (\n    <div className=\"App\">\n      <h1>Counter example</h1>\n\n      <p>Count: {count}</p>\n      <button onClick={handleClick}>Increment+</button>\n\n      <hr />\n      <p>choose amount</p>\n      <fieldset>\n        <input type=\"number\" />\n        <button>Add</button>\n      </fieldset>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}